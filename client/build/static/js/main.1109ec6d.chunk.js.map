{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","title","content","post","setPost","postsArr","setPostsArr","getPosts","axios","get","then","res","data","catch","alert","useEffect","handleChange","target","name","value","prevValue","deletePost","url","method","_id","console","log","currentYear","Date","getFullYear","className","src","alt","onSubmit","event","preventDefault","type","placeholder","autoComplete","onChange","rows","map","index","onClick","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6NA0IeA,G,MAtIH,WAAO,IAAD,EACQC,mBAAS,CAC/BC,MAAO,GACPC,QAAS,KAHK,mBACTC,EADS,KACHC,EADG,OAMgBJ,mBAAS,IANzB,mBAMTK,EANS,KAMCC,EAND,KAQVC,EAAW,WACfC,IAAMC,IAAI,6BACPC,MAAK,SAACC,GACLL,EAAYK,EAAIC,SAEjBC,OAAM,kBAAMC,MAAM,6BAGvBC,qBAAU,WACRR,MACC,IAEH,IAAMS,EAAe,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACdC,EAAgBD,EAAhBC,KAAMC,EAAUF,EAAVE,MAED,UAATD,EACFd,GAAQ,SAACgB,GACP,MAAO,CACLnB,MAAOkB,EACPjB,QAASkB,EAAUlB,YAGL,YAATgB,GACTd,GAAQ,SAACgB,GACP,MAAO,CACLnB,MAAOmB,EAAUnB,MACjBC,QAASiB,OA8BXE,EAAa,SAAC,GAAgB,IAC1BF,EADyB,EAAbF,OACZE,MACRX,IAAM,CACJc,IAAK,mCACLC,OAAQ,SACRX,KAAM,CACJY,IAAKL,KAGNT,MAAK,WACJe,QAAQC,IAAI,kCACZnB,OAEDM,OAAM,kBAAMY,QAAQC,IAAI,6BAIvBC,GADO,IAAIC,MACQC,cAGzB,OACE,sBAAKC,UAAU,MAAf,UACE,sBAAKA,UAAU,UAAf,UACE,sBAAKA,UAAU,SAAf,UACE,iDACA,qBACEC,IAAI,8MACJC,IAAI,wBAGR,uBAAMC,SAtDG,SAACC,GACdA,EAAMC,iBAEN3B,IAAM,CACJc,IAAK,iCACLC,OAAQ,OACRX,KAAM,CACJX,MAAOE,EAAKF,MACZC,QAASC,EAAKD,WAGfQ,MAAK,WACJe,QAAQC,IAAI,uBACZtB,EAAQ,CACNH,MAAO,GACPC,QAAS,KAEXK,OAEDM,OAAM,WACLY,QAAQC,IAAI,6BAkCZ,UACE,6CACA,uBACEU,KAAK,OACLlB,KAAK,QACLmB,YAAY,QACZC,aAAa,MACbC,SAAUvB,EACVG,MAAOhB,EAAKF,QAEd,uBACA,0BACEiB,KAAK,UACLmB,YAAY,UACZG,KAAM,EACND,SAAUvB,EACVG,MAAOhB,EAAKD,UAEd,uBACA,wBAAQ4B,UAAU,gBAAlB,4BAEF,uBACA,qBAAKA,UAAU,QAAf,SACGzB,EAASoC,KAAI,SAACtC,EAAMuC,GACnB,OACE,sBAAKZ,UAAU,OAAf,UACE,6BAAK3B,EAAKF,QACV,4BAAIE,EAAKD,UACT,wBAAQ4B,UAAU,gBAAgBX,MAAOhB,EAAKqB,IAAKmB,QAAStB,EAA5D,2BAHyBlB,EAAKqB,UAQtC,qBAAKM,UAAU,YAEjB,sDAAsBH,UCzHbiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBpC,MAAK,YAAkD,IAA/CqC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.1109ec6d.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './App.css';\n\nconst App = () => {\n  const [post, setPost] = useState({\n    title: '',\n    content: ''\n  });\n\n  const [postsArr, setPostsArr] = useState([]);\n\n  const getPosts = () => {\n    axios.get('http://localhost:8080/api')\n      .then((res) => {\n        setPostsArr(res.data);\n      })\n      .catch(() => alert('Error recieving posts'));\n  }\n\n  useEffect(() => {\n    getPosts();\n  }, [])\n\n  const handleChange = ({ target }) => {\n    const { name, value } = target;\n\n    if (name === 'title') {\n      setPost((prevValue) => {\n        return {\n          title: value,\n          content: prevValue.content\n        }\n      });\n    } else if (name === 'content') {\n      setPost((prevValue) => {\n        return {\n          title: prevValue.title,\n          content: value\n        }\n      });\n    }\n  }\n\n  const submit = (event) => {\n    event.preventDefault();\n\n    axios({\n      url: 'http://localhost:8080/api/save',\n      method: 'POST',\n      data: {\n        title: post.title,\n        content: post.content\n      }\n    })\n      .then(() => {\n        console.log('Sent post to server');\n        setPost({\n          title: '',\n          content: ''\n        });\n        getPosts();\n      })\n      .catch(() => {\n        console.log('Internal server error');\n      });\n  }\n\n  const deletePost = ({ target }) => {\n    const { value } = target;\n    axios({\n      url: 'http://localhost:8080/api/delete',\n      method: 'DELETE',\n      data: {\n        _id: value\n      }\n    })\n      .then(() => {\n        console.log('Delete request sent to server.')\n        getPosts();\n      })\n      .catch(() => console.log('Internal server error'));\n  }\n\n  const date = new Date();\n  const currentYear = date.getFullYear();\n\n\n  return (\n    <div className=\"app\">\n      <div className=\"wrapper\">\n        <div className=\"header\">\n          <h1>Black And Techy</h1>\n          <img\n            src=\"https://lh3.googleusercontent.com/proxy/IFkwE7YIKqSrzzFkyhe38wDmG49wCJPDJVuAJdcOwnkQLwuH6RZmoA57n_goUyGdaznZlUjGxj8IX58wXYWL9m0FaTAYYDxysg7RGs4G85UXvjgYvZt5p8LeAiviHzwe1HfwH9yzmnDnsmDhSso8HF_vqJHjJYzuWV8\"\n            alt=\"Black Power Fist\"\n          />\n        </div>\n        <form onSubmit={submit}>\n          <h2>Create Post</h2>\n          <input\n            type=\"text\"\n            name=\"title\"\n            placeholder=\"Title\"\n            autoComplete=\"off\"\n            onChange={handleChange}\n            value={post.title}\n          />\n          <br />\n          <textarea\n            name=\"content\"\n            placeholder=\"content\"\n            rows={7}\n            onChange={handleChange}\n            value={post.content}\n          />\n          <br />\n          <button className=\"submit-button\">Submit Post</button>\n        </form>\n        <hr />\n        <div className=\"posts\">\n          {postsArr.map((post, index) => {\n            return (\n              <div className=\"post\" key={post._id}>\n                <h3>{post.title}</h3>\n                <p>{post.content}</p>\n                <button className=\"delete-button\" value={post._id} onClick={deletePost}>Delete Post</button>\n              </div>\n            );\n          })}\n        </div>\n        <div className=\"push\"></div>\n      </div>\n      <footer>Â© Davin Reid {currentYear}</footer>\n    </div>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}