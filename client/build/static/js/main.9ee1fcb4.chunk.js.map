{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","title","content","post","setPost","postsArr","setPostsArr","isLoading","setIsLoading","getPosts","a","axios","get","then","res","data","alert","useEffect","handleChange","target","name","value","prevValue","deletePost","url","method","_id","console","log","catch","currentYear","Date","getFullYear","className","src","alt","onSubmit","event","preventDefault","type","placeholder","autoComplete","onChange","rows","cols","style","visibility","position","marginLeft","CircularProgress","map","index","onClick","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6PAgKeA,G,MA3JH,WAAO,IAAD,EACQC,mBAAS,CAC/BC,MAAO,GACPC,QAAS,KAHK,mBACTC,EADS,KACHC,EADG,OAMgBJ,mBAAS,IANzB,mBAMTK,EANS,KAMCC,EAND,OAOkBN,oBAAS,GAP3B,mBAOTO,EAPS,KAOEC,EAPF,KAkBVC,EAAQ,uCAAG,sBAAAC,EAAA,+EAEPC,IACHC,IAAI,2CACJC,MAAK,SAAAC,GACJR,EAAYQ,EAAIC,SALP,OAObP,GAAa,GAPA,+CASbQ,MAAM,yBATO,wDAAH,qDAadC,qBAAU,WACRR,MACC,IAEH,IAAMS,EAAe,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACdC,EAAgBD,EAAhBC,KAAMC,EAAUF,EAAVE,MAED,UAATD,EACFhB,GAAQ,SAACkB,GACP,MAAO,CACLrB,MAAOoB,EACPnB,QAASoB,EAAUpB,YAGL,YAATkB,GACThB,GAAQ,SAACkB,GACP,MAAO,CACLrB,MAAOqB,EAAUrB,MACjBC,QAASmB,OA8BXE,EAAa,SAAC,GAAgB,IAC1BF,EADyB,EAAbF,OACZE,MACRV,IAAM,CACJa,IAAK,iDACLC,OAAQ,SACRV,KAAM,CACJW,IAAKL,KAGNR,MAAK,WACJc,QAAQC,IAAI,kCACZnB,OAEDoB,OAAM,kBAAMF,QAAQC,IAAI,6BAIvBE,GADO,IAAIC,MACQC,cAGzB,OACE,sBAAKC,UAAU,MAAf,UACE,sBAAKA,UAAU,UAAf,UACE,sBAAKA,UAAU,SAAf,UACE,iDACA,qBACEC,IAAI,uBACJC,IAAI,wBAGR,uBAAMC,SAtDG,SAACC,GACdA,EAAMC,iBAEN3B,IAAM,CACJa,IAAK,+CACLC,OAAQ,OACRV,KAAM,CACJd,MAAOE,EAAKF,MACZC,QAASC,EAAKD,WAGfW,MAAK,WACJc,QAAQC,IAAI,uBACZxB,EAAQ,CACNH,MAAO,GACPC,QAAS,KAEXO,OAEDoB,OAAM,WACLF,QAAQC,IAAI,6BAkCZ,UACE,6CACA,uBACEW,KAAK,OACLnB,KAAK,QACLoB,YAAY,QACZC,aAAa,MACbC,SAAUxB,EACVG,MAAOlB,EAAKF,QAEd,uBACA,0BACEgC,UAAU,kBACVb,KAAK,UACLoB,YAAY,UACZG,KAAM,GACNC,KAAM,GACNF,SAAUxB,EACVG,MAAOlB,EAAKD,UAEd,uBACA,wBAAQ+B,UAAU,gBAAlB,4BAEF,oBAAIA,UAAU,gBAAd,mBACA,uBACA,qBAAKY,MAAO,CAAEC,WAAYvC,EAAY,SAAW,UAAWwC,SAAU,WAAYC,WAAY,QAA9F,SACE,cAACC,EAAA,EAAD,MAEF,qBAAKhB,UAAU,QAAf,SACG5B,EAAS6C,KAAI,SAAC/C,EAAMgD,GACnB,OACE,sBAAKlB,UAAU,OAAf,UACE,6BAAK9B,EAAKF,QACV,4BAAIE,EAAKD,UACT,wBAAQ+B,UAAU,gBAAgBZ,MAAOlB,EAAKuB,IAAK0B,QAAS7B,EAA5D,2BAHyBpB,EAAKuB,UAQtC,qBAAKO,UAAU,YAEjB,sDAAsBH,UC/IbuB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB1C,MAAK,YAAkD,IAA/C2C,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.9ee1fcb4.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport './App.css';\r\n\r\nconst App = () => {\r\n  const [post, setPost] = useState({\r\n    title: '',\r\n    content: ''\r\n  });\r\n\r\n  const [postsArr, setPostsArr] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  // const getPosts = async () => {\r\n  //   await axios.get('https://blackandtechy.herokuapp.com/api')\r\n  //     .then((res) => {\r\n  //       setPostsArr(res.data);\r\n  //       setIsLoading(true)\r\n  //     })\r\n  //     .catch(() => alert('Error recieving posts'));\r\n  // }\r\n\r\n  const getPosts = async () => {\r\n    try {\r\n      await axios\r\n        .get('https://blackandtechy.herokuapp.com/api')\r\n        .then(res => {\r\n          setPostsArr(res.data);\r\n        })\r\n      setIsLoading(true);\r\n    } catch {\r\n      alert('Error recieving posts');\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    getPosts();\r\n  }, [])\r\n\r\n  const handleChange = ({ target }) => {\r\n    const { name, value } = target;\r\n\r\n    if (name === 'title') {\r\n      setPost((prevValue) => {\r\n        return {\r\n          title: value,\r\n          content: prevValue.content\r\n        }\r\n      });\r\n    } else if (name === 'content') {\r\n      setPost((prevValue) => {\r\n        return {\r\n          title: prevValue.title,\r\n          content: value\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  const submit = (event) => {\r\n    event.preventDefault();\r\n\r\n    axios({\r\n      url: 'https://blackandtechy.herokuapp.com/api/save',\r\n      method: 'POST',\r\n      data: {\r\n        title: post.title,\r\n        content: post.content\r\n      }\r\n    })\r\n      .then(() => {\r\n        console.log('Sent post to server');\r\n        setPost({\r\n          title: '',\r\n          content: ''\r\n        });\r\n        getPosts();\r\n      })\r\n      .catch(() => {\r\n        console.log('Internal server error');\r\n      });\r\n  }\r\n\r\n  const deletePost = ({ target }) => {\r\n    const { value } = target;\r\n    axios({\r\n      url: 'https://blackandtechy.herokuapp.com/api/delete',\r\n      method: 'DELETE',\r\n      data: {\r\n        _id: value\r\n      }\r\n    })\r\n      .then(() => {\r\n        console.log('Delete request sent to server.')\r\n        getPosts();\r\n      })\r\n      .catch(() => console.log('Internal server error'));\r\n  }\r\n\r\n  const date = new Date();\r\n  const currentYear = date.getFullYear();\r\n\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <div className=\"wrapper\">\r\n        <div className=\"header\">\r\n          <h1>Black And Techy</h1>\r\n          <img\r\n            src=\"/images/blkpower.png\"\r\n            alt=\"Black Power Fist\"\r\n          />\r\n        </div>\r\n        <form onSubmit={submit}>\r\n          <h2>Create Post</h2>\r\n          <input\r\n            type=\"text\"\r\n            name=\"title\"\r\n            placeholder=\"Title\"\r\n            autoComplete=\"off\"\r\n            onChange={handleChange}\r\n            value={post.title}\r\n          />\r\n          <br />\r\n          <textarea\r\n            className=\"content-section\"\r\n            name=\"content\"\r\n            placeholder=\"content\"\r\n            rows={10}\r\n            cols={30}\r\n            onChange={handleChange}\r\n            value={post.content}\r\n          />\r\n          <br />\r\n          <button className=\"submit-button\">Submit Post</button>\r\n        </form>\r\n        <h2 className=\"posts-heading\">Posts</h2>\r\n        <hr />\r\n        <div style={{ visibility: isLoading ? \"hidden\" : \"visable\", position: \"absolute\", marginLeft: \"25px\" }}>\r\n          <CircularProgress />\r\n        </div>\r\n        <div className=\"posts\">\r\n          {postsArr.map((post, index) => {\r\n            return (\r\n              <div className=\"post\" key={post._id}>\r\n                <h3>{post.title}</h3>\r\n                <p>{post.content}</p>\r\n                <button className=\"delete-button\" value={post._id} onClick={deletePost}>Delete Post</button>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n        <div className=\"push\"></div>\r\n      </div>\r\n      <footer>Â© Davin Reid {currentYear}</footer>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}